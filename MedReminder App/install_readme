TITLE: Medication Reminder App
AUTHOR: Tyler Murphy


SYNOPSIS:
The application's events are based around a clock, the purpose being to alert a
caretaker of upcoming medications that must be administered at specific times.

The app contains a static list of medications with times and dosages, with the idea
being that the patient's guardian has previously set these from their side of the app.
When the clock is 15 minutes prior to the administration time, the list item is highlighted.
When the clock passes the time, the list item is faded.


FEATURES:
- Clock determines alert status of list items under the 'Today' tab on the side menu.
- User can select the 'Medications' tab to view a list of the medications and dose
  quantity for the patient.
- User can add notes about the patient at any point by clicking the pencil in the
  top right corner of the Navbar. These notes can be viewed in the 'Notes' tab.
- User can phone the patient's emergency contact or call 911 by selecting the
  appropriate tabs from the side menu.
    - This feature is 'concept only' in this version.
    - Clicking these tabs in the side menu opens a modal, with the 'call' button
      adding to the Notes tab that the call was made.
    - Some example notes have been included for display purposes.


FUTURE DIRECTIONS:
Upon completion of this application, there are a few areas I believe could use improvements:
- Global variables need to be avoided entirely. Presently, global variables are
  being used for the clock (seconds, minutes, etc) and the list of notes (notesListMaster).
  While fine for a small app not made for use by others, global variables defeat the purpose
  of writing modular components, and would cause problems in larger production environments.
- State can be better handled by using an extension such as Flux or Redux.
- The notes list should be state, not a global variable, and therefore should trigger the
  view to re-render when adding new content while on the notes component is active.
- The React community is moving towards using ES6+ (ECMA2015) syntax, and the app would
  benefit from being refactored as such.
- Control for proptypes, and ensure no errors or warnings are triggered in the console.
- Add a button that appears when the medication needs to be administered, forcing the user
  to confirm that the medication was in fact delivered. Log the time and add to notes tab.


INSTALLATION:
1. Install dependencies:
> npm install --save react react-dom react-router@2.0.0-rc5 radium react-bootstrap react-fontawesome
> npm install --save-dev html-webpack-plugin webpack webpack-dev-server babel-core babel-loader babel-preset-react

2. Create the Dist (index.html, index_bundle.js) directory:
> npm run production

3. Run dev server on localhost:8080
> npm run start
